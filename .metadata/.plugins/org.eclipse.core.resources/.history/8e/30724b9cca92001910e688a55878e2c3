package br.edu.ifpe.igarassu.ipi.poo.model.controller;

import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.util.Map;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;

import br.edu.ifpe.igarassu.ipi.poo.DAOArrayList;
import br.edu.ifpe.igarassu.ipi.poo.user.User;

public class Servidor {
	
    public static void main(String[] args) throws Exception {
    	DAOArrayList<User> respositorioUsuarios = new DAOArrayList<User>();
   		popularRepositorio(respositorioUsuarios);
    	
        HttpServer server = HttpServer.create(new InetSocketAddress(1234), 0);
        server.createContext("/id", new MyHandler(respositorioUsuarios));
        server.setExecutor(null); // creates a default executor
        server.start();
		System.out.println("Server running");
    }
    
    private static void popularRepositorio(DAOArrayList<User> respositorioUsuarios) {
    	respositorioUsuarios.adicionar(new User(0, "Carla", "312"));
    	respositorioUsuarios.adicionar(new User(1, "Carlos", "541"));
    	respositorioUsuarios.adicionar(new User(2, "Marcos", "451"));
    	respositorioUsuarios.adicionar(new User(3, "Joao", "123"));
    	respositorioUsuarios.adicionar(new User(3, "Joana", "171"));
    }

    static class MyHandler implements HttpHandler {
    	DAOArrayList<User> respositorioUsuarios = new DAOArrayList<User>();
    	
        public MyHandler(DAOArrayList<User> respositorioUsuarios) {
        	this.respositorioUsuarios = respositorioUsuarios;
		}

		@Override
        public void handle(HttpExchange t) throws IOException {
			
			//Map<String,Object> attributes = t.getAttributes();
			String urlString[] = t.getRequestURI().getQuery().split("/");
			
			System.out.println("test");

			ObjectMapper mapper = new ObjectMapper();

			try {
				String response = mapper.writeValueAsString(respositorioUsuarios.buscarPorId(1));
				System.out.println(response);
				t.sendResponseHeaders(200, response.length());
				OutputStream os = t.getResponseBody();
				os.write(response.getBytes());
				os.close();
			} catch (JsonProcessingException e) {
				e.printStackTrace();
			}
        }
    }

}