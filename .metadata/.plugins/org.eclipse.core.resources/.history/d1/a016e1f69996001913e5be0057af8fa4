package br.edu.ifpe.igarassu.ipi.poo.model.controller.user;

import java.io.IOException;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.security.Principal;
import java.util.List;
import java.util.Map;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.sun.net.httpserver.HttpContext;
import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;

import br.edu.ifpe.igarassu.ipi.poo.model.controller.AbstractHandler;
import br.edu.ifpe.igarassu.ipi.poo.model.controller.SocialNetworkFacade;
import br.edu.ifpe.igarassu.ipi.poo.user.User;

public class SearchByNameUserHandler extends AbstractHandler {

	public SearchByNameUserHandler(SocialNetworkFacade facade) {
		super(facade);
	}

	@Override
	public void handle(HttpExchange exchange) throws IOException {
		try {
			printRequestInfo(exchange);

			Map<String, Object> parameters = parsePostParameters(exchange);

			Object parameter = parameters.get("name");
			if (parameter == null) {
			}
			String name = parameter.toString();
			
			System.out.println("search user: " + name);
			List<User> users = super.getFacade().searchUserByName(name);

			ObjectMapper mapper = new ObjectMapper();

			try {
				String[] path = exchange.getRequestURI().getPath().split("/");

				String response = mapper.writeValueAsString(users);
				System.out.println(response);
				exchange.sendResponseHeaders(200, response.length());
				OutputStream os = exchange.getResponseBody();
				os.write(response.getBytes());
				os.close();
			} catch (JsonProcessingException e) {
				e.printStackTrace();
			}
		
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}

}
